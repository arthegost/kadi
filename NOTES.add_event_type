#################################################################
# Add a new event type
#################################################################

*******************************************************************************
See https://github.com/sot/kadi/pull/34 for canonical example of file updates.
*******************************************************************************

#####  Add new model in kadi/events/models.py  #####

%%
ska
cd ~/git/kadi
emacs kadi/events/models.py
%%

##### Create data ######

%%
export ModelClassName=<model_class_name>
cp $ska/data/kadi/events.db3 ./
export KADI=$PWD

  ## To update the format of an existing event type, drop table(s)
  sqlite3 events.db3
  .tables  # to get table names
  drop table events_<model_class_name>
  # Note possibility of coupled tables like (manvr, manvrseq),
  # (orbit, orbitpoint), (darkcal, darkcalreplica).  In these cases
  # drop both.
  select * from events_update;
  delete from events_update where name='Manvr'  # for example
  delete from events_update where name='ManvrSeq'  # if needed

./manage.py syncdb

python -m kadi.update_events --start=1999:200 --stop=2001:001 --model=${ModelClassName}
# Update early events first and look for warnings.  Also confirm that the first event
# matches what is in the current database unless a change is intended.
# Some events may need a later start data to be fully sampled.  Manvr, for example,
# should use a start of "1999:251"  (1999:230 + 21 days lookback).
# Probably not needed for events that rely on only one event MSID.

python -m kadi.update_events --start=2001:001 --model=${ModelClassName}
# Update the rest of the time range for the updated model/event


##### Test #########

ipython --pylab
from kadi import events
events.__file__
# etc

###### Update web service files #########

%%
emacs kadi/events/admin.py kadi/events/views.py
./manage.py runserver
%%
Confirm web access works as expected

###### Update docs #########

%%+
cd docs
ipython
>>> import sys; sys.path.insert(0, '/home/aldcroft/git/kadi')
>>> import kadi.events
>>> kadi.events.__file__

>>> run make_field_tables

>>> update_models_docstrings(outfile='models_test.py')
>>> !diff models_test.py ../kadi/events/models.py
>>> !mv models_test.py ../kadi/events/models.py

>>> exit()

ipython
>>> import sys; sys.path.insert(0, '/home/aldcroft/git/kadi')
>>> run make_field_tables

# Update event_descriptions.rst in place
>>> make_event_descriptions_section('event_descriptions.rst')

>>> make_events_tables()
%%-

- Copy the three tables there to the appropriate sections in index.rst
  and kadi/events/__init__.py.

NOTE: this makes tables that have one vertical space separating columns
      while the baseline files have two.  Leave at two.  Need to fix code
      or just do this manually.


###### Confirm that new database is backward compatible with old kadi code for reading

Use the current flight kadi code and the test database and confirm that kadi tests pass

  In [5]: paths.EVENTS_DB_PATH()
  Out[5]: '/home/jeanconn/git/kadi/events.db3'
  In [9]: kadi.test()
  ============================= test session starts ==============================
  platform linux2 -- Python 2.7.9 -- py-1.4.26 -- pytest-2.6.4
  collected 15 items

  kadi/tests/test_events.py ..........
  kadi/tests/test_occweb.py .....

  ========================== 15 passed in 46.69 seconds ==========================
  Out[9]: 0

###### Install to flight #########

[Running as aldcroft is fine]

## Create pull request and merge
%%
git checkout master
git pull origin master
%%

## As user aca:
%%
ska
cd ~/git/kadi
git checkout master
git pull origin master

python setup.py install

cd docs
make clean
make html
cd ..
make install_doc

## As user aldcroft
cd
export KADI=/proj/sot/ska/data/kadi
~/git/kadi/manage.py syncdb
$ska/share/kadi/update_events --start=2000:001 --model=${ModelClassName} --data-root=/proj/sot/ska/data/kadi

###### Install to OCC ska test #########

## As user SOT
%%+
ska
cd ~/git/kadi
git checkout master
git fetch origin
  <passwd>
git merge origin/master
python setup.py install

scp {aldcroft@ccosmos:,}/proj/sot/ska/data/kadi/events.db3
  <passwd>
%%-
